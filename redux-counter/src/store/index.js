import { createStore } from "redux";
import { createSlice, configureStore } from "@reduxjs/toolkit";

const initialState = { counter: 0, showCounter: true };

// Using redux toolkit
const counterSlice = createSlice({
  name: "counter",
  initialState,
  reducers: {
    // createSlice automatically generates the reducer logic and corresponding action creators
    // The actions can be accessed by counterActions.increment, counterActions.decrement, counterActions.increase, and counterActions.toggle
    increment(state) {
      state.counter++;
    },
    decrement(state) {
      state.counter--;
    },
    increase(state, action) {
      state.counter = state.counter + action.payload; // payload is a special name designated by redux toolkit, and we cannot use other names
    },
    toggle(state) {
      state.showCounter = !state.showCounter;
    },
  },
});

const initialAuthState = { isAuthenticated: false };

const authSlice = createSlice({
  name: "authentication",
  initialState: initialAuthState,
  reducers: {
    // createSlice automatically generates the reducer logic and corresponding action creators
    // The actions can be accessed by authActions.login and authActions.logout
    login(state) {
      state.isAuthenticated = true;
    },
    logout(state) {
      state.isAuthenticated = false;
    },
  },
});

// Using original redux
// const counterReducer = (state = initialState, action) => {
//   if (action.type === "increment") {
//     return {
//       counter: state.counter + 1,
//       showCounter: state.showCounter,
//     };
//   }

//   if (action.type === "increase") {
//     return {
//       counter: state.counter + action.amount,
//       showCounter: state.showCounter,
//     };
//   }

//   if (action.type === "decrement") {
//     return {
//       counter: state.counter - 1,
//       showCounter: state.showCounter,
//     };
//   }

//   if (action.type === "toggle") {
//     return {
//       showCounter: !state.showCounter,
//       counter: state.counter,
//     };
//   }

//   return state;
// };

// Using redux toolkit
const store = configureStore({
  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },
});

// Using original redux
// const store = createStore(counterReducer);

// These actions are automatically generated by redux toolkit
export const counterActions = counterSlice.actions;
export const authActions = authSlice.actions;
export default store;
