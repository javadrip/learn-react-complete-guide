{"ast":null,"code":"var _jsxFileName = \"/Users/vin/code/javadrip/react-complete-guide/01-starting-setup/src/components/Expenses/ExpensesList.js\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesList = props => {\n  // Conditional content: Show a message if there are no expenses for the selected year.\n  if (props.items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"expenses-list__fallback\",\n      children: \"Found no expenses.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  // Conditional content: Show the expenses for the selected year.\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"expenses-list\",\n    children: props.items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpensesList;\nexport default ExpensesList;\nvar _c;\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"names":["ExpenseItem","jsxDEV","_jsxDEV","ExpensesList","props","items","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","expense","title","amount","date","id","_c","$RefreshReg$"],"sources":["/Users/vin/code/javadrip/react-complete-guide/01-starting-setup/src/components/Expenses/ExpensesList.js"],"sourcesContent":["import \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = props => {\n  // Conditional content: Show a message if there are no expenses for the selected year.\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n  // Conditional content: Show the expenses for the selected year.\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map(expense => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n"],"mappings":";AAAA,OAAO,oBAAoB;AAC3B,OAAOA,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGC,KAAK,IAAI;EAC5B;EACA,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAC5B,oBAAOJ,OAAA;MAAIK,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EACxE;EACA;EACA,oBACEV,OAAA;IAAIK,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC1BJ,KAAK,CAACC,KAAK,CAACQ,GAAG,CAACC,OAAO,iBACtBZ,OAAA,CAACF,WAAW;MAEVe,KAAK,EAAED,OAAO,CAACC,KAAM;MACrBC,MAAM,EAAEF,OAAO,CAACE,MAAO;MACvBC,IAAI,EAAEH,OAAO,CAACG;IAAK,GAHdH,OAAO,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKlB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAET,CAAC;AAACO,EAAA,GAlBIhB,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}